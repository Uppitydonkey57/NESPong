;
; File generated by cc65 v 2.18 - Debian 2.19-1
;
	.fopt		compiler,"cc65 v 2.18 - Debian 2.19-1"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.importzp	_ctrl1
	.import		_draw_meta_sprite
	.import		_draw_sprite
	.export		_foreground_palette
	.export		_background_palette
	.export		_paddle
	.export		_game_state
	.export		_x_pos
	.export		_y_pos
	.export		_sprite
	.export		_meta_x
	.export		_init
	.export		_draw
	.export		_update

.segment	"DATA"

.segment	"ZEROPAGE"
_game_state:
	.byte	$00
_x_pos:
	.byte	$1E
_y_pos:
	.byte	$1E
_sprite:
	.byte	$0A
_meta_x:
	.byte	$00
.segment	"DATA"

.segment	"RODATA"

_foreground_palette:
	.byte	$00
	.byte	$01
	.byte	$02
	.byte	$03
	.byte	$00
	.byte	$01
	.byte	$02
	.byte	$03
	.byte	$00
	.byte	$01
	.byte	$02
	.byte	$03
	.byte	$00
	.byte	$01
	.byte	$02
	.byte	$03
_background_palette:
	.byte	$05
	.byte	$06
	.byte	$07
	.byte	$08
	.byte	$05
	.byte	$06
	.byte	$07
	.byte	$08
	.byte	$05
	.byte	$06
	.byte	$07
	.byte	$08
	.byte	$05
	.byte	$06
	.byte	$07
	.byte	$08
_paddle:
	.byte	$00
	.byte	$02
	.byte	$80
	.byte	$00
	.byte	$08
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$10
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$18
	.byte	$02
	.byte	$00
	.byte	$00
	.res	16,$00

; ---------------------------------------------------------------
; void __near__ init (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_init: near

.segment	"CODE"

;
; asm("rts");
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ draw (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_draw: near

.segment	"CODE"

;
; draw_sprite(x_pos, y_pos, 0, 1);
;
	jsr     decsp3
	lda     _x_pos
	ldy     #$02
	sta     (sp),y
	lda     _y_pos
	dey
	sta     (sp),y
	lda     #$00
	dey
	sta     (sp),y
	lda     #$01
	jsr     _draw_sprite
;
; draw_sprite(70, 50, 0xA9, 3);
;
	jsr     decsp3
	lda     #$46
	ldy     #$02
	sta     (sp),y
	lda     #$32
	dey
	sta     (sp),y
	lda     #$A9
	dey
	sta     (sp),y
	lda     #$03
	jsr     _draw_sprite
;
; draw_meta_sprite(meta_x,20,paddle,32);
;
	jsr     decsp4
	lda     _meta_x
	ldy     #$03
	sta     (sp),y
	lda     #$14
	dey
	sta     (sp),y
	lda     #<(_paddle)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(_paddle)
	sta     (sp),y
	lda     #$20
	jmp     _draw_meta_sprite

.endproc

; ---------------------------------------------------------------
; void __near__ update (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_update: near

.segment	"CODE"

;
; meta_x++;
;
	inc     _meta_x
;
; if (ctrl1 & DOWN_BTN) {
;
	lda     _ctrl1
	and     #$04
	beq     L0065
;
; y_pos++;
;
	inc     _y_pos
;
; if (ctrl1 & UP_BTN) {
;
L0065:	lda     _ctrl1
	and     #$08
	beq     L0066
;
; y_pos--;
;
	dec     _y_pos
;
; if (ctrl1 & RIGHT_BTN) {
;
L0066:	lda     _ctrl1
	and     #$01
	beq     L0067
;
; x_pos++;
;
	inc     _x_pos
;
; if (ctrl1 & LEFT_BTN) {
;
L0067:	lda     _ctrl1
	and     #$02
	beq     L0068
;
; x_pos--;
;
	dec     _x_pos
;
; if (ctrl1 & A_BTN) {
;
L0068:	lda     _ctrl1
	and     #$80
	beq     L0060
;
; sprite--;
;
	dec     _sprite
;
; asm("rts");
;
L0060:	rts

.endproc

